"use strict";(self.webpackChunkdata_mapping_tool_doc_io=self.webpackChunkdata_mapping_tool_doc_io||[]).push([[206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,b=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(b,l(l({ref:t},p),{},{components:n})):a.createElement(b,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9596:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>y,default:()=>O,frontMatter:()=>h,metadata:()=>k,toc:()=>N});var a=n(7462),o=n(7294),r=n(3905),l=n(6010),i=n(2389),s=n(7392),u=n(7094),p=n(2466);const c="tabList__CuJ",d="tabItem_LNqP";function m(e){var t;const{lazy:n,block:r,defaultValue:i,values:m,groupId:b,className:f}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,s.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===i?i:i??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:N}=(0,u.U)(),[T,O]=(0,o.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=b){const e=v[b];null!=e&&e!==T&&h.some((t=>t.value===e))&&O(e)}const D=e=>{const t=e.currentTarget,n=w.indexOf(t),a=h[n].value;a!==T&&(E(t),O(a),null!=b&&N(b,String(a)))},_=e=>{var t;let n=null;switch(e.key){case"Enter":D(e);break;case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},f)},h.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:_,onClick:D},r,{className:(0,l.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":T===t})}),n??t)}))),n?(0,o.cloneElement)(g.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function b(e){const t=(0,i.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}const f="tabItem_Ymn6";function g(e){let{children:t,hidden:n,className:a}=e;return o.createElement("div",{role:"tabpanel",className:(0,l.Z)(f,a),hidden:n},t)}const h={title:"Introduction",sidebar_position:1},y="Data Mapping Tool",k={unversionedId:"intro",id:"intro",title:"Introduction",description:"Data Mapping Tool is a web platform that allows users to load their tabular data as CSV and map it according to the ontology",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/data-mapping-tool-doc.io/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Backend",permalink:"/data-mapping-tool-doc.io/docs/backend/"}},v={},N=[{value:"What you&#39;ll need",id:"what-youll-need",level:2},{value:"Python \ud83d\udc0d",id:"python-",level:3},{value:"MongoDB \ud83c\udf43",id:"mongodb-",level:3},{value:"Node",id:"node",level:3}],T={toc:N};function O(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-mapping-tool"},"Data Mapping Tool"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Data Mapping Tool")," is a web platform that allows users to load their tabular data as ",(0,r.kt)("inlineCode",{parentName:"p"},"CSV")," and map it according to the ontology\nselected. In addition, this platform generates a ",(0,r.kt)("inlineCode",{parentName:"p"},"YARRRML")," file as output. Nevertheless, you can transform the result to\nother formats such as ",(0,r.kt)("inlineCode",{parentName:"p"},"RML"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R2RML")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RDF"),"."),(0,r.kt)("h2",{id:"what-youll-need"},"What you'll need"),(0,r.kt)("p",null,"Before running ",(0,r.kt)("inlineCode",{parentName:"p"},"Data Mapping Tool")," platform, you first need to install the following dependencies:"),(0,r.kt)("h3",{id:"python-"},"Python \ud83d\udc0d"),(0,r.kt)(b,{mdxType:"Tabs"},(0,r.kt)(g,{value:"MacOS",label:"MacOS",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"brew install python@3.8\n"))),(0,r.kt)(g,{value:"Ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt install python\n")))),(0,r.kt)("h3",{id:"mongodb-"},"MongoDB \ud83c\udf43"),(0,r.kt)(b,{mdxType:"Tabs"},(0,r.kt)(g,{value:"docker",label:"Docker-compose",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Create the following two files, ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"init-mongo.js"),", to up a container with MongoDB image with ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," user."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Replace ",(0,r.kt)("strong",{parentName:"p"},"${",(0,r.kt)("em",{parentName:"strong"},"VARIABLE"),"}")," from files ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"init-mongo.js"),", and set yours.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'},'version: "3"\nservices:\n    mongo:\n        image: mongo:latest\n        ports:\n            - "27017:27017"\n        environment:\n            - MONGO_INITDB_DATABASE=${DATABASE_NAME}\n            - MONGO_INITDB_ROOT_USERNAME=${ROOT_USERNAME}\n            - MONGO_INITDB_ROOT_PASSWORD=${ROOT_PASSWORD}\n        volumes:\n        - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="init-mongo.js"',title:'"init-mongo.js"'},"db.createUser({\n    user: '${ROOT_USERNAME}',\n    pwd: '${ROOT_PASSWORD}',\n    roles: [{role: 'readWrite', db: '${DATABASE_NAME}'}]\n});\n\n"))),(0,r.kt)(g,{value:"Standalone",label:"Standalone",mdxType:"TabItem"},(0,r.kt)("p",null,"To install MongoDB in your local machine follow the official ",(0,r.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/"},"guide"),"."))),(0,r.kt)("h3",{id:"node"},"Node"),(0,r.kt)(b,{mdxType:"Tabs"},(0,r.kt)(g,{value:"MacOS",label:"MacOS",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"brew install node\n"))),(0,r.kt)(g,{value:"Ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt install nodejs\n")))))}O.isMDXComponent=!0}}]);